{"version":3,"file":"static/js/833.6b94451d.chunk.js","mappings":"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","sources":["api.js","components/MoviesList/MoviesList.jsx","components/SearchForm.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = '82e54d6346add158b3ca2c4553f01f90';\n\nconst movieApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: api_key,\n  },\n});\n\nexport const moviesFetch = async () => {\n  const response = await movieApi.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await movieApi.get('/search/movie', {\n    params: { query: searchQuery },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const searchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const searchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`);\n  return response.data;\n};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport image from 'images/notFound.jpeg';\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies &&\n        movies.map(({ id, name, title, poster_path }) => (\n          <li key={id}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ location }}\n            >\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : image\n                }\n                alt={title}\n                width=\"300\"\n                height=\"400\"\n              />\n              <span>{name || title}</span>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};","import React from 'react';\n\nconst SearchForm = ({ handleSubmit, searchQuery, setSearchQuery }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Enter your query here, please\"\n        value={searchQuery}\n        onChange={event => setSearchQuery(event.target.value)}\n      />\n      <button type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchForm;","import { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMoviesByName } from '../../api';\nimport Form from '../../components/SearchForm';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      if (!query) {\n        return;\n      }\n      try {\n        const response = await searchMoviesByName(query);\n        setMovies(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovie();\n  }, [query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: searchQuery });\n    setSearchQuery('');\n  };\n\n  return (\n    <div>\n      <Form\n        searchQuery={searchQuery}\n        setSearchQuery={setSearchQuery}\n        handleSubmit={handleSubmit}\n      />\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["movieApi","axios","baseURL","params","api_key","moviesFetch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","get","sent","abrupt","data","results","stop","apply","arguments","searchMoviesByName","_ref2","_callee2","searchQuery","_context2","query","_x","searchMovieById","_ref3","_callee3","id","_context3","concat","_x2","searchMovieByCast","_ref4","_callee4","_context4","_x3","searchMovieByReviews","_ref5","_callee5","_context5","_x4","MoviesList","movies","location","useLocation","_jsx","children","map","name","title","poster_path","_jsxs","Link","to","state","src","image","alt","width","height","handleSubmit","setSearchQuery","onSubmit","type","placeholder","value","onChange","event","target","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","fetchMovie","t0","console","log","Form","preventDefault"],"sourceRoot":""}